# Massive thank you to @ricardojorgerm
# for the help in creating this nginx configuration file.

# # #
# RATE LIMITS

limit_req_zone global zone=global:10m rate=500r/s;
limit_req_zone $binary_remote_addr zone=ip:10m rate=5r/s;
limit_req_status 429;


# # #
# CACHE

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=apicache:512m inactive=60m;


# # #
# UPSTREAM

upstream api_upstream {
    zone upstreams 64K;
    server server:5050 max_fails=1 fail_timeout=2s;
    keepalive 10;
}


# # #
# HTTP SERVER

server {

    listen 80;
    server_name api.carrismetropolitana.pt;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }

}


# # #
# HTTPS SERVER

server {

    listen 443 ssl;
    server_name api.carrismetropolitana.pt;
    server_tokens off;

    # Lets Encrypt Certificates
    ssl_certificate /etc/letsencrypt/live/api.carrismetropolitana.pt/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.carrismetropolitana.pt/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Turn on gZip compression
    gzip on;
    gzip_types application/json;

    # Do not skip cache by default
    set $skip_cache 0;
    set $skip_reason "";

    # Skip cache if Uptime Monitor
    if ($http_uptime_monitor = "UPTIME_MONITOR_HEADER") {
        set $skip_cache 1;
        set $skip_reason "Is-Uptime-Monitor";
    }

    # Cache configuration
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 60m;
    proxy_cache_valid 404 5m;
    proxy_cache_lock on;
    proxy_cache_lock_age 30s; 
    proxy_cache_lock_timeout 90s;
    proxy_cache_use_stale error timeout;


    # # #
    # NAKED REDIRECT #

    location = / {
        return 307 https://github.com/carrismetropolitana/api;
    }

    # # #


    # # #
    # QR CODE REDIRECTS #

    location ~* ^/qr/store {
        return 307 https://www.google.com/search?q=merchandsing
    }
    
    location ~* ^/qr/stops {
        return 307 https://beta.carrismetropolitana.pt/helpdesks;
    }
    
    location ~* ^/qr/vehicles {
        return 307 https://beta.carrismetropolitana.pt;
    }

    # # #


    # For stop realtime routes
    location ~ "^/stops/\d{6}/realtime$" {
        # Rate limit
        limit_req zone=global burst=200 delay=2;
        limit_req zone=ip burst=20 delay=2;
        # Proxy Cache
        proxy_cache apicache;
        proxy_cache_bypass $skip_cache; # Do Not Bypass Cache (unless is Uptime Monitor)
        proxy_cache_revalidate on;
        proxy_cache_valid 200 20s; # Cache responses for 20 seconds
        proxy_cache_valid 404 20s; # Cache responses for 20 seconds
        # Add headers
        add_header X-Realtime 1;
        add_header X-Cache-Skip $skip_reason;
        add_header X-Cache-Status $upstream_cache_status;
        add_header Cache-Control "public, max-age=20"; # Cache responses for 20 seconds
        add_header Access-Control-Allow-Origin "*";
        # Proxy Connect
        proxy_http_version 1.1;
        proxy_connect_timeout 10s;
        proxy_send_timeout 20s;
        proxy_read_timeout 20s;
        proxy_set_header Connection "";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        proxy_pass http://api_upstream;
        proxy_next_upstream error timeout http_500;
    }

    # For vehicles routes
    location ~* ^/vehicles.* {
       # Rate limit
        limit_req zone=global burst=200 delay=2;
        limit_req zone=ip burst=20 delay=2;
        # Proxy Cache
        proxy_cache apicache;
        proxy_cache_bypass $skip_cache; # Do Not Bypass Cache (unless is Uptime Monitor)
        proxy_cache_revalidate on;
        proxy_cache_valid 200 20s; # Cache responses for 20 seconds
        proxy_cache_valid 404 20s; # Cache responses for 20 seconds
        # Add headers
        add_header X-Realtime 1;
        add_header X-Cache-Skip $skip_reason;
        add_header X-Cache-Status $upstream_cache_status;
        add_header Cache-Control "public, max-age=20"; # Cache responses for 20 seconds
        add_header Access-Control-Allow-Origin "*";
        # Proxy Connect
        proxy_http_version 1.1;
        proxy_connect_timeout 10s;
        proxy_send_timeout 20s;
        proxy_read_timeout 20s;
        proxy_set_header Connection "";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        proxy_pass http://api_upstream;
        proxy_next_upstream error timeout http_500;
    }

    # For alerts routes
    location ~* ^/alerts.* {
       # Rate limit
        limit_req zone=global burst=200 delay=2;
        limit_req zone=ip burst=20 delay=2;
        # Proxy Cache
        proxy_cache apicache;
        proxy_cache_bypass $skip_cache; # Do Not Bypass Cache (unless is Uptime Monitor)
        proxy_cache_revalidate on;
        proxy_cache_valid 200 20s; # Cache responses for 20 seconds
        proxy_cache_valid 404 20s; # Cache responses for 20 seconds
        # Add headers
        add_header X-Realtime 1;
        add_header X-Cache-Skip $skip_reason;
        add_header X-Cache-Status $upstream_cache_status;
        add_header Cache-Control "public, max-age=20"; # Cache responses for 20 seconds
        add_header Access-Control-Allow-Origin "*";
        # Proxy Connect
        proxy_http_version 1.1;
        proxy_connect_timeout 10s;
        proxy_send_timeout 20s;
        proxy_read_timeout 20s;
        proxy_set_header Connection "";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        proxy_pass http://api_upstream;
        proxy_next_upstream error timeout http_500;
    }

    # For helpdesks routes
    location ~* ^/helpdesks.* {
        # Rate limit
        limit_req zone=global burst=200 delay=2;
        limit_req zone=ip burst=20 delay=2;
        # Proxy Cache
        proxy_cache apicache;
        proxy_cache_bypass $skip_cache; # Do Not Bypass Cache (unless is Uptime Monitor)
        proxy_cache_revalidate on;
        proxy_cache_valid 200 60s; # Cache responses for 60 seconds
        proxy_cache_valid 404 60s; # Cache responses for 60 seconds
        # Add headers
        add_header X-Realtime 1;
        add_header X-Cache-Skip $skip_reason;
        add_header X-Cache-Status $upstream_cache_status;
        add_header Cache-Control "public, max-age=60"; # Cache responses for 60 seconds
        add_header Access-Control-Allow-Origin "*";
        # Proxy Connect
        proxy_http_version 1.1;
        proxy_connect_timeout 10s;
        proxy_send_timeout 20s;
        proxy_read_timeout 20s;
        proxy_set_header Connection "";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        proxy_pass http://api_upstream;
        proxy_next_upstream error timeout http_500;
    }

    # For all other routes
    location / {
        # Rate limit
        limit_req zone=global burst=200 delay=2;
        limit_req zone=ip burst=20 delay=2;
        # Proxy Cache
        proxy_cache apicache;
        proxy_cache_bypass $skip_cache; # Do Not Bypass Cache (unless is Uptime Monitor)
        proxy_cache_revalidate on;
        # Add headers
        add_header X-Cache-Skip $skip_reason;
        add_header X-Cache-Status $upstream_cache_status;
        add_header Cache-Control "public, max-age=3600"; # Cache responses for 3600 seconds
        add_header Access-Control-Allow-Origin "*";
        # Proxy Connect
        proxy_http_version 1.1;
        proxy_connect_timeout 10s;
        proxy_send_timeout 20s;
        proxy_read_timeout 20s;
        proxy_set_header Connection "";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        proxy_pass http://api_upstream;
        proxy_next_upstream error timeout http_500;
    }

    # Enable for basic statistics
    # location = /basic_status {
    #     stub_status;
    # }

}