name: Build & Publish Docker Images

on:
  push:
    branches:
      - beta

jobs:
  #

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  # api-server:
  #   name: 'Docker Build - server'
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@main

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@master
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build Docker Image
  #       uses: docker/build-push-action@master
  #       with:
  #         push: true
  #         context: ./server
  #         file: ./server/Dockerfile
  #         tags: ghcr.io/carrismetropolitana/api-server:${{ github.ref_name }}

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  # api-parse-datasets:
  #   name: 'Docker Build - parse-datasets'
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@main

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@master
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build Docker Image
  #       uses: docker/build-push-action@master
  #       with:
  #         push: true
  #         context: ./parse-datasets
  #         file: ./parse-datasets/Dockerfile
  #         tags: ghcr.io/carrismetropolitana/api-parse-datasets:${{ github.ref_name }}

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  # api-parse-network:
  #   name: 'Docker Build - parse-network'
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@main

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@master
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build Docker Image
  #       uses: docker/build-push-action@master
  #       with:
  #         push: true
  #         context: ./parse-network
  #         file: ./parse-network/Dockerfile
  #         tags: ghcr.io/carrismetropolitana/api-parse-network:${{ github.ref_name }}

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  api-sync-rtevents:
    name: 'Docker Build - sync-rtevents'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Calculate SHA256 hash
        id: calculate-hash
        run: |
          cache_key=cache_key=$(find "./sync-rtevents" -type f -print0 | sort -z | xargs -0 sha256sum | sha256sum | cut -d' ' -f1)
          echo "sync-rtevents hash: $cache_key"

      - uses: actions/cache@v4
        id: cache
        with:
          path: sync-rtevents.hash
          key: sync-rtevents-hash-$(cache_key)

      # - name: Restore cached SHA256 hash
      #   id: cache-hash-restore
      #   uses: actions/cache/restore@v4
      #   with:
      #     path: sync-rtevents.hash.prev
      #     key: sync-rtevents.hash-${{ github.ref_name }}

      - name: Compare SHA256 hashes
        if: steps.cache.outputs.cache-hit != 'true'
        id: compare-hashes
        run: |
          hash_prev=$(<sync-rtevents.hash.prev 2>/dev/null || echo "fallback_value")
          hash_current=$(<sync-rtevents.hash 2>/dev/null || echo "fallback_value")
          if [[ "$hash_prev" == "$hash_current" ]]; then
            echo "The hashes are identical."
          else
            echo "The hashes are different."
          fi

      - name: Save Primes
        id: cache-hash-save
        uses: actions/cache/save@v4
        with:
          path: sync-rtevents.hash
          key: ${{ steps.cache-hash-restore.outputs.cache-primary-key }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        if: env.sync_rtevents_changed == 'true'
        uses: docker/build-push-action@master
        with:
          push: true
          context: ./sync-rtevents
          file: ./sync-rtevents/Dockerfile
          tags: ghcr.io/carrismetropolitana/api-sync-rtevents:${{ github.ref_name }}

      - name: Store current hash for future comparisons
        if: env.sync_rtevents_changed == 'true'
        run: |
          cp sync-rtevents.hash sync-rtevents.hash.old

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  # api-sync-encm:
  #   name: 'Docker Build - sync-encm'
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@main

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@master
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build Docker Image
  #       uses: docker/build-push-action@master
  #       with:
  #         push: true
  #         context: ./sync-encm
  #         file: ./sync-encm/Dockerfile
  #         tags: ghcr.io/carrismetropolitana/api-sync-encm:${{ github.ref_name }}

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  # api-switch:
  #   name: 'Docker Build - switch'
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@main

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@master
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build Docker Image
  #       uses: docker/build-push-action@master
  #       with:
  #         push: true
  #         context: ./switch
  #         file: ./switch/Dockerfile
  #         tags: ghcr.io/carrismetropolitana/api-switch:${{ github.ref_name }}
