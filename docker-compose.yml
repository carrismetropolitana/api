version: '3.9'

volumes:
  certbotdata:
  gtfsapidb:
  settingsdb:

networks:
  backend-network:
    driver: bridge

services:
  #
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=30
      - WATCHTOWER_CLEANUP=TRUE
      - WATCHTOWER_INCLUDE_STOPPED=TRUE
      - WATCHTOWER_REVIVE_STOPPED=TRUE

  nginx:
    image: ghcr.io/carrismetropolitana/schedules-api-nginx:latest
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./options/letsencrypt:/etc/letsencrypt
      - certbotdata:/var/www/certbot
    networks:
      - backend-network
    ports:
      - 80:80
      - 443:443

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./options/letsencrypt:/etc/letsencrypt
      - certbotdata:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  api:
    image: ghcr.io/carrismetropolitana/schedules-api-api:latest
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    networks:
      - backend-network
    environment:
      - SETTINGSDB_HOST=$SETTINGSDB_HOST
      - SETTINGSDB_USER=$SETTINGSDB_USER
      - SETTINGSDB_PASSWORD=$SETTINGSDB_PASSWORD
      - SETTINGSDB_NAME=$SETTINGSDB_NAME
      - GTFSAPIDB_HOST=GTFSAPIdb
      - GTFSAPIDB_USER=$GTFSAPIDB_USER
      - GTFSAPIDB_PASSWORD=$GTFSAPIDB_PASSWORD
      - GTFSAPIDB_NAME=$GTFSAPIDB_NAME

  daemon:
    image: ghcr.io/carrismetropolitana/schedules-api-daemon:latest
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./data-temp/:/data-temp
    environment:
      - SETTINGSDB_HOST=$SETTINGSDB_HOST
      - SETTINGSDB_USER=$SETTINGSDB_USER
      - SETTINGSDB_PASSWORD=$SETTINGSDB_PASSWORD
      - SETTINGSDB_NAME=$SETTINGSDB_NAME
      - GTFSAPIDB_HOST=$GTFSAPIDB_HOST
      - GTFSAPIDB_USER=$GTFSAPIDB_USER
      - GTFSAPIDB_PASSWORD=$GTFSAPIDB_PASSWORD
      - GTFSAPIDB_NAME=$GTFSAPIDB_NAME
      - GTFSPARSEDB_HOST=$GTFSPARSEDB_HOST
      - GTFSPARSEDB_USER=root
    networks:
      - backend-network

  settingsdb:
    image: mongo
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - settingsdb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$SETTINGSDB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$SETTINGSDB_PASSWORD
    networks:
      - backend-network

  gtfsapidb:
    image: mongo
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - gtfsapidb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$GTFSAPIDB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$GTFSAPIDB_PASSWORD
    networks:
      - backend-network

  gtfsparsedb:
    image: mysql
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./options/gtfsparsedb/:/etc/mysql/conf.d/
      - ./data-temp/:/data-temp
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=$GTFSPARSEDB_NAME
    networks:
      - backend-network
