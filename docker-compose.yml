version: '3.9'

volumes:
  certbotdata:
  serverdb:

networks:
  api-network:
    driver: bridge

services:
  #

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=10
      - WATCHTOWER_CLEANUP=TRUE
      - WATCHTOWER_INCLUDE_STOPPED=TRUE
      - WATCHTOWER_REVIVE_STOPPED=TRUE
      - WATCHTOWER_ROLLING_RESTART=TRUE

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  nginx:
    image: nginx:stable
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./letsencrypt:/etc/letsencrypt
      - certbotdata:/var/www/certbot
    networks:
      - api-network
    ports:
      - 80:80
      - 443:443
    env_file:
      - ./.env
    command: '/bin/sh -c ''sed -i "s/UPTIME_MONITOR_HEADER/${UPTIME_MONITOR_HEADER}/g" "/etc/nginx/conf.d/nginx.conf" && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - certbotdata:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  serverdb:
    image: mongo
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - serverdb:/data/db
    networks:
      - api-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=serverdbuser
      - MONGO_INITDB_ROOT_PASSWORD=serverdbpassword

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  feederdb:
    image: postgres
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./feederdb/:/etc/postgresql/
    networks:
      - api-network
    environment:
      - POSTGRES_USER=feederdbuser
      - POSTGRES_PASSWORD=feederdbpassword

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  server:
    image: ghcr.io/carrismetropolitana/api-server:v2
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    networks:
      - api-network
    env_file:
      - ./.env
    environment:
      - SERVERDB_HOST=serverdb
      - SERVERDB_USER=serverdbuser
      - SERVERDB_PASSWORD=serverdbpassword
      - SERVERDB_NAME=serverdb

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  feeder:
    image: ghcr.io/carrismetropolitana/api-feeder:v2
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    networks:
      - api-network
    environment:
      - GTFS_URL=https://github.com/carrismetropolitana/gtfs/raw/live/CarrisMetropolitana.zip
      - SERVERDB_HOST=serverdb
      - SERVERDB_USER=serverdbuser
      - SERVERDB_PASSWORD=serverdbpassword
      - SERVERDB_NAME=serverdb
      - FEEDERDB_HOST=feederdb
      - FEEDERDB_USER=feederdbuser
      - FEEDERDB_PASSWORD=feederdbpassword

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  sync:
    image: ghcr.io/carrismetropolitana/api-sync:v2
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    networks:
      - api-network
    env_file:
      - ./.env
    environment:
      - SERVERDB_HOST=serverdb
      - SERVERDB_USER=serverdbuser
      - SERVERDB_PASSWORD=serverdbpassword
      - SERVERDB_NAME=serverdb
